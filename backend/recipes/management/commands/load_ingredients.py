import json
from django.core.management.base import BaseCommand
from recipes.models import Ingredient


class Command(BaseCommand):
    help = '–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏–∑ ingredients.json. –°—Ç–∞—Ä—ã–µ ‚Äî —É–¥–∞–ª—è–µ—Ç.'

    def handle(self, *args, **kwargs):
        self.stdout.write(self.style.WARNING('‚ö†Ô∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤...'))
        count_deleted, _ = Ingredient.objects.all().delete()

        self.stdout.write(self.style.SUCCESS(f'üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {count_deleted} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤'))

        try:
            with open('data/ingredients.json', encoding='utf-8') as file:
                data = json.load(file)

            ingredients = [
                Ingredient(name=item['name'], measurement_unit=item['measurement_unit'])
                for item in data if item.get('name') and item.get('measurement_unit')
            ]

            Ingredient.objects.bulk_create(ingredients)
            self.stdout.write(self.style.SUCCESS(f'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(ingredients)} –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤'))

        except Exception as error:
            self.stderr.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞: {error}'))
